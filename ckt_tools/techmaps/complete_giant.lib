library(complete_giant) {
  cell(BUF) {
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }
  cell(NOT) {
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }
  cell(AND2) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B)"; }
  }
  cell(AND3) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C)"; }
  }
  cell(AND4) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D)"; }
  }
  cell(AND5) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E)"; }
  }
  cell(AND6) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E*F)"; }
  }
  cell(AND7) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E*F*G)"; }
  }
  cell(AND8) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(H) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E*F*G*H)"; }
  }
  cell(OR2) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B)"; }
  }
  cell(OR3) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C)"; }
  }
  cell(OR4) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D)"; }
  }
  cell(OR5) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E)"; }
  }
  cell(OR6) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E+F)"; }
  }
  cell(OR7) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E+F+G)"; }
  }
  cell(OR8) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(H) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E+F+G+H)"; }
  }
  cell(NAND2) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B)'"; }
  }
  cell(NAND3) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C)'"; }
  }
  cell(NAND4) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D)'"; }
  }
  cell(NAND5) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E)'"; }
  }
  cell(NAND6) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E*F)'"; }
  }
  cell(NAND7) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E*F*G)'"; }
  }
  cell(NAND8) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(H) { direction: input; }
      pin(Y) { direction: output;
                function: "(A*B*C*D*E*F*G*H)'"; }
  }
  cell(NOR2) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B)'"; }
  }
  cell(NOR3) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C)'"; }
  }
  cell(NOR4) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D)'"; }
  }
  cell(NOR5) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E)'"; }
  }
  cell(NOR6) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E+F)'"; }
  }
  cell(NOR7) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E+F+G)'"; }
  }
  cell(NOR8) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(H) { direction: input; }
      pin(Y) { direction: output;
                function: "(A+B+C+D+E+F+G+H)'"; }
  }
  cell(XNOR2) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B)'"; }
  }
  cell(XNOR3) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C)'"; }
  }
  cell(XNOR4) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D)'"; }
  }
  cell(XNOR5) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E)'"; }
  }
  cell(XNOR6) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E^F)'"; }
  }
  cell(XNOR7) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E^F^G)'"; }
  }
  cell(XNOR8) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(H) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E^F^G^H)'"; }
  }
  cell(XOR2) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B)"; }
  }
  cell(XOR3) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C)"; }
  }
  cell(XOR4) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D)"; }
  }
  cell(XOR5) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E)"; }
  }
  cell(XOR6) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E^F)"; }
  }
  cell(XOR7) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E^F^G)"; }
  }
  cell(XOR8) {
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(G) { direction: input; }
      pin(H) { direction: input; }
      pin(Y) { direction: output;
                function: "(A^B^C^D^E^F^G^H)"; }
  }
}
